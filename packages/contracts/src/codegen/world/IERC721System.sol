// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

interface IERC721System {
  function from(bytes16 name) external view returns (bytes32);

  function supportsInterface(bytes4 interfaceId) external pure returns (bool);

  function balanceOf(address owner) external view returns (uint256);

  function ownerOf(uint256 _tokenId) external view returns (address);

  function proxy() external view returns (address);

  function totalSupply() external view returns (uint256);

  function name() external view returns (string memory);

  function symbol() external view returns (string memory);

  function getAddress() external view returns (address);

  function tokenURI(uint256 tokenId) external view returns (string memory);

  function approve(address to, uint256 tokenId) external;

  function getApproved(uint256 tokenId) external view returns (address);

  function setApprovalForAll(address operator, bool approved) external;

  function isApprovedForAll(address owner, address operator) external view returns (bool);

  function transferFrom(
    address from,
    address to,
    uint256 tokenId
  ) external;

  function safeTransferFrom(
    address from,
    address to,
    uint256 tokenId
  ) external;

  function safeTransferFromWithData(
    address from,
    address to,
    uint256 tokenId,
    bytes memory data
  ) external;
}
